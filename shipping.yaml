- name: install shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: install MAVEN
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check the roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: output #output is variable name
    ignore_errors: true

  - name: create user roboshop
    become: yes #we need sudo access for this task only
    ansible.builtin.user:
      name: roboshop
    when: output.rc != 0    

  - name: check app directory exist or not
    ansible.builtin.stat:
     path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
     msg: "output is {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download shipping and extract
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args: 
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args: 
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: true

  - name: install MYSQL client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load MYSQL schema
    ansible.builtin.command: mysql -h mysql.devopsuday.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

   - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: true